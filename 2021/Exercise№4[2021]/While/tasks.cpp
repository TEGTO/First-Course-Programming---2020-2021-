#include <iostream>
using namespace std;


void task1()
{/*Даны положительные числа A и B (A > B). На отрезке длины A разме-
щено максимально возможное количество отрезков длины B (без наложе-
ний). Не используя операции умножения и деления, найти длину незанятой
части отрезка A.*/
	
	int a, b, c = 0;
	cout << "Начало задачи 1" << endl;
	cout << "Введите число а и b, так что бы а>b" << endl;
	cout << "Введите число а:" << endl;
	cin >> a;
	cout << "Введите число b:" << endl;
	cin >> b;
	while (a > b)
	{
		c++; b++;
	}
	if (b = a - 1) {
		cout << c << endl;

	}
	cout << "Конец задачи 1" << endl;
}


void task2()
{/*Даны целые положительные числа N и K. Используя только операции
сложения и вычитания, найти частное от деления нацело N на K, а также
остаток от этого деления.*/
	cout << "Начало задачи 2" << endl;
	int a, d,f;
	int c = 0;
	int n, k;
	cout << "Введите число N и K, так что бы N>K" << endl;
	cout << "Введите число N:" << endl;
	cin >> n;
	cout << "Введите число K:" << endl<<endl;
	cin >> k;
	d = k;
	while (n - k >= 0) {

		k = k + d;
		c++;
	}
if (c == 0) {
		c++;
	}
	a = n - k;
 if (a < 0){
		a = n - (k - d); }
	cout <<"Частное N,K = " << c << endl << "Отстаток N,K = " << a << endl;
	cout << "Конец задачи 2" << endl<<endl;
}

void task3 ()/*Дано целое число N (> 0). Если оно является степенью числа 3, то вы-
вести True, если не является — вывести False.*/
{
	cout << "Начало задачи 3" << endl;
	int n;

	cout << "Введите число N:" << endl;
	cin >> n;
	while (n % 3 != 0) {
		cout << "FALSE" << endl; break;
	}
	while (n % 3 <= 0) {
		cout << "TRUE" << endl; break;
	}
	cout << "Конец задачи 3" << endl<<endl;
}
void task4() {/*Дано целое число N (> 0). Используя операции деления нацело и взя-
тия остатка от деления, вывести все его цифры, начиная с самой правой
(разряда единиц*/
	cout << "Задача №4" << endl;
	int n,c;
	cout << "Введите число N:" << endl;
	cin >> n;
	while (n > 0)
	{
		cout << n % 10 << " ";
	n /= 10;

	}

}
void task5()
{
	cout << "Задача №5" << endl;
	int n, c;
	cout << "Введите число N:" << endl;
	cin >> n;
	while (n / 1 && n % 2 != 0 || n % 3 != 0 || n % 4 != 0 || n % 5 != 0 || n % 6 != 0 || n % 7 != 0 || n % 8 != 0 || n % 9 != 0 || n % 10 != 0) {
		cout << "TRUE" << endl;
		break;
	}
	while (n % 2 <= 0 || n % 3 <= 0 || n % 4 <= 0 || n % 5 <= 0 || n % 6 <= 0 || n % 7 <= 0 || n % 8 <= 0 || n % 9 <= 0 || n % 10 <= 0) {
		cout << "FALSE" << endl; break;
	}

}